import React, { useState } from 'react';
import {
  Box,
  Typography,
  Card,
  CardContent,
  Button,
  Grid,
  Alert,
  Paper,
  Chip,
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
} from '@mui/material';
import {
  Download,
  Visibility,
  School,
  Assessment,
  Analytics,
  BarChart,
} from '@mui/icons-material';

interface ArquivoExemplo {
  id: string;
  nome: string;
  descricao: string;
  ferramenta: string;
  tamanho: string;
  registros: number;
  colunas: string[];
  preview: string[][];
  icon: React.ReactNode;
  cor: string;
}

const GerenciadorExemplos: React.FC = () => {
  const [dialogAberto, setDialogAberto] = useState(false);
  const [arquivoSelecionado, setArquivoSelecionado] = useState<ArquivoExemplo | null>(null);

  const arquivosExemplo: ArquivoExemplo[] = [
    {
      id: 'automl',
      nome: 'exemplo_automl.csv',
      descricao: 'Dados de funcion√°rios para predi√ß√£o de aprova√ß√£o',
      ferramenta: 'AutoML',
      tamanho: '1.2 KB',
      registros: 20,
      colunas: ['nome', 'idade', 'salario', 'experiencia', 'aprovado'],
      preview: [
        ['Jo√£o Silva', '25', '3000', '2', 'sim'],
        ['Maria Santos', '30', '5000', '5', 'sim'],
        ['Pedro Costa', '22', '2000', '1', 'n√£o'],
        ['Ana Lima', '35', '7000', '8', 'sim']
      ],
      icon: <School />,
      cor: 'primary'
    },
    {
      id: 'cba',
      nome: 'exemplo_cba.csv',
      descricao: 'Dados categ√≥ricos para descoberta de regras de associa√ß√£o',
      ferramenta: 'An√°lise CBA',
      tamanho: '0.8 KB',
      registros: 20,
      colunas: ['idade', 'renda', 'regiao', 'estado_civil', 'tem_filhos', 'compra_online'],
      preview: [
        ['jovem', 'alta', 'sudeste', 'solteiro', 'n√£o', 'sim'],
        ['adulto', 'media', 'sul', 'casado', 'sim', 'n√£o'],
        ['jovem', 'baixa', 'nordeste', 'solteiro', 'n√£o', 'n√£o'],
        ['idoso', 'alta', 'sudeste', 'casado', 'sim', 'sim']
      ],
      icon: <Assessment />,
      cor: 'secondary'
    },
    {
      id: 'visualizacao',
      nome: 'exemplo_visualizacao.csv',
      descricao: 'Dados de vendas por m√™s e regi√£o para gr√°ficos',
      ferramenta: 'Visualiza√ß√µes',
      tamanho: '1.0 KB',
      registros: 24,
      colunas: ['mes', 'vendas', 'regiao', 'categoria'],
      preview: [
        ['Janeiro', '15000', 'Norte', 'Eletr√¥nicos'],
        ['Fevereiro', '18000', 'Norte', 'Eletr√¥nicos'],
        ['Mar√ßo', '22000', 'Norte', 'Eletr√¥nicos'],
        ['Abril', '20000', 'Norte', 'Eletr√¥nicos']
      ],
      icon: <BarChart />,
      cor: 'success'
    }
  ];

  const visualizarArquivo = (arquivo: ArquivoExemplo) => {
    setArquivoSelecionado(arquivo);
    setDialogAberto(true);
  };

  const baixarArquivo = (arquivo: ArquivoExemplo) => {
    // Simular download - em uma implementa√ß√£o real, seria um link para o arquivo
    const dados = {
      automl: `nome,idade,salario,experiencia,aprovado
Jo√£o Silva,25,3000,2,sim
Maria Santos,30,5000,5,sim
Pedro Costa,22,2000,1,n√£o
Ana Lima,35,7000,8,sim
Carlos Rocha,28,4000,3,sim
Lucia Alves,24,2500,1,n√£o
Rafael Mendes,32,6000,6,sim
Fernanda Cruz,26,3500,2,sim
Bruno Dias,29,4500,4,sim
Camila Nunes,23,2200,1,n√£o
Jos√© Oliveira,31,5500,7,sim
Mariana Gomes,27,3800,3,sim
Roberto Lima,33,6500,9,sim
Patricia Silva,25,3200,2,sim
Felipe Santos,24,2800,1,n√£o
Amanda Costa,30,5200,5,sim
Diego Almeida,28,4200,3,sim
Juliana Rocha,26,3600,2,sim
Gustavo Pereira,29,4800,4,sim
Larissa Martins,27,3900,3,sim`,
      cba: `idade,renda,regiao,estado_civil,tem_filhos,compra_online
jovem,alta,sudeste,solteiro,n√£o,sim
adulto,media,sul,casado,sim,n√£o
jovem,baixa,nordeste,solteiro,n√£o,n√£o
idoso,alta,sudeste,casado,sim,sim
adulto,alta,centro-oeste,casado,n√£o,sim
jovem,media,sul,solteiro,n√£o,sim
idoso,media,nordeste,viuvo,sim,n√£o
adulto,baixa,norte,casado,sim,n√£o
jovem,alta,sudeste,solteiro,n√£o,sim
adulto,media,sul,casado,sim,sim
idoso,baixa,nordeste,viuvo,sim,n√£o
jovem,media,centro-oeste,solteiro,n√£o,sim
adulto,alta,sudeste,casado,n√£o,sim
jovem,baixa,norte,solteiro,n√£o,n√£o
idoso,alta,sul,casado,sim,sim
adulto,media,nordeste,casado,sim,n√£o
jovem,alta,sudeste,solteiro,n√£o,sim
idoso,media,centro-oeste,viuvo,sim,n√£o
adulto,baixa,norte,casado,sim,n√£o
jovem,media,sul,solteiro,n√£o,sim`,
      visualizacao: `mes,vendas,regiao,categoria
Janeiro,15000,Norte,Eletr√¥nicos
Fevereiro,18000,Norte,Eletr√¥nicos
Mar√ßo,22000,Norte,Eletr√¥nicos
Abril,20000,Norte,Eletr√¥nicos
Maio,25000,Norte,Eletr√¥nicos
Junho,28000,Norte,Eletr√¥nicos
Janeiro,12000,Sul,Roupas
Fevereiro,14000,Sul,Roupas
Mar√ßo,16000,Sul,Roupas
Abril,18000,Sul,Roupas
Maio,21000,Sul,Roupas
Junho,24000,Sul,Roupas
Janeiro,8000,Nordeste,Livros
Fevereiro,9000,Nordeste,Livros
Mar√ßo,10000,Nordeste,Livros
Abril,11000,Nordeste,Livros
Maio,12000,Nordeste,Livros
Junho,13500,Nordeste,Livros
Janeiro,20000,Sudeste,Eletr√¥nicos
Fevereiro,23000,Sudeste,Eletr√¥nicos
Mar√ßo,26000,Sudeste,Eletr√¥nicos
Abril,24000,Sudeste,Eletr√¥nicos
Maio,28000,Sudeste,Eletr√¥nicos
Junho,32000,Sudeste,Eletr√¥nicos`
    };

    const conteudo = dados[arquivo.id as keyof typeof dados];
    const blob = new Blob([conteudo], { type: 'text/csv;charset=utf-8;' });
    const link = document.createElement('a');
    const url = URL.createObjectURL(blob);
    link.setAttribute('href', url);
    link.setAttribute('download', arquivo.nome);
    link.style.visibility = 'hidden';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  return (
    <Box sx={{ p: 3 }}>
      {/* Header */}
      <Box sx={{ textAlign: 'center', mb: 4 }}>
        <Typography variant="h3" gutterBottom>
          üìÅ Arquivos de Exemplo
        </Typography>
        <Typography variant="h6" color="text.secondary">
          Dados prontos para testar todas as funcionalidades da plataforma
        </Typography>
      </Box>

      <Alert severity="info" sx={{ mb: 4 }}>
        <Typography variant="h6" gutterBottom>
          üéØ Como usar os exemplos:
        </Typography>
        <Box component="ol" sx={{ pl: 2 }}>
          <li><strong>Baixe um arquivo:</strong> Clique em "Download" para salvar no seu computador</li>
          <li><strong>Teste a ferramenta:</strong> Use o arquivo na ferramenta correspondente</li>
          <li><strong>Aprenda:</strong> Veja como os dados devem ser formatados</li>
          <li><strong>Adapte:</strong> Use como modelo para seus pr√≥prios dados</li>
        </Box>
      </Alert>

      <Grid container spacing={3}>
        {arquivosExemplo.map((arquivo) => (
          <Grid item xs={12} md={4} key={arquivo.id}>
            <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>
              <CardContent sx={{ flex: 1 }}>
                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
                  <Box sx={{ color: `${arquivo.cor}.main`, mr: 1 }}>
                    {arquivo.icon}
                  </Box>
                  <Typography variant="h6" sx={{ flexGrow: 1 }}>
                    {arquivo.nome}
                  </Typography>
                  <Chip 
                    label={arquivo.ferramenta} 
                    color={arquivo.cor as any}
                    size="small"
                  />
                </Box>

                <Typography variant="body2" paragraph color="text.secondary">
                  {arquivo.descricao}
                </Typography>

                <Box sx={{ mb: 2 }}>
                  <Typography variant="subtitle2" gutterBottom>
                    üìä Informa√ß√µes:
                  </Typography>
                  <Grid container spacing={1}>
                    <Grid item xs={6}>
                      <Paper sx={{ p: 1, textAlign: 'center', bgcolor: 'grey.50' }}>
                        <Typography variant="h6" color="primary">
                          {arquivo.registros}
                        </Typography>
                        <Typography variant="caption">Registros</Typography>
                      </Paper>
                    </Grid>
                    <Grid item xs={6}>
                      <Paper sx={{ p: 1, textAlign: 'center', bgcolor: 'grey.50' }}>
                        <Typography variant="h6" color="primary">
                          {arquivo.colunas.length}
                        </Typography>
                        <Typography variant="caption">Colunas</Typography>
                      </Paper>
                    </Grid>
                  </Grid>
                </Box>

                <Typography variant="subtitle2" gutterBottom>
                  üìã Colunas:
                </Typography>
                <Box sx={{ mb: 2 }}>
                  {arquivo.colunas.map((coluna, index) => (
                    <Chip
                      key={index}
                      label={coluna}
                      size="small"
                      sx={{ mr: 0.5, mb: 0.5 }}
                      variant="outlined"
                    />
                  ))}
                </Box>

                <Box sx={{ display: 'flex', gap: 1, mt: 'auto' }}>
                  <Button
                    variant="outlined"
                    startIcon={<Visibility />}
                    onClick={() => visualizarArquivo(arquivo)}
                    size="small"
                    fullWidth
                  >
                    Visualizar
                  </Button>
                  <Button
                    variant="contained"
                    startIcon={<Download />}
                    onClick={() => baixarArquivo(arquivo)}
                    size="small"
                    fullWidth
                    color={arquivo.cor as any}
                  >
                    Download
                  </Button>
                </Box>
              </CardContent>
            </Card>
          </Grid>
        ))}
      </Grid>

      {/* Tutorial de Como Usar */}
      <Card sx={{ mt: 4 }}>
        <CardContent>
          <Typography variant="h5" gutterBottom>
            üìö Guia R√°pido de Uso
          </Typography>
          
          <Grid container spacing={3}>
            <Grid item xs={12} md={4}>
              <Paper sx={{ p: 2, bgcolor: 'primary.light', color: 'white' }}>
                <Typography variant="h6" gutterBottom>
                  ü§ñ Para AutoML
                </Typography>
                <Typography variant="body2">
                  1. Baixe <strong>exemplo_automl.csv</strong><br/>
                  2. V√° para a se√ß√£o AutoML<br/>
                  3. Carregue o arquivo<br/>
                  4. Execute o treinamento<br/>
                  5. Analise a precis√£o do modelo
                </Typography>
              </Paper>
            </Grid>
            
            <Grid item xs={12} md={4}>
              <Paper sx={{ p: 2, bgcolor: 'secondary.light', color: 'white' }}>
                <Typography variant="h6" gutterBottom>
                  üîç Para An√°lise CBA
                </Typography>
                <Typography variant="body2">
                  1. Baixe <strong>exemplo_cba.csv</strong><br/>
                  2. V√° para a se√ß√£o CBA<br/>
                  3. Carregue o arquivo<br/>
                  4. Execute a descoberta<br/>
                  5. Veja as regras encontradas
                </Typography>
              </Paper>
            </Grid>
            
            <Grid item xs={12} md={4}>
              <Paper sx={{ p: 2, bgcolor: 'success.light', color: 'white' }}>
                <Typography variant="h6" gutterBottom>
                  üìä Para Visualiza√ß√µes
                </Typography>
                <Typography variant="body2">
                  1. Baixe <strong>exemplo_visualizacao.csv</strong><br/>
                  2. V√° para a se√ß√£o Visualiza√ß√µes<br/>
                  3. Carregue o arquivo<br/>
                  4. Escolha o tipo de gr√°fico<br/>
                  5. Visualize os resultados
                </Typography>
              </Paper>
            </Grid>
          </Grid>
        </CardContent>
      </Card>

      {/* Dialog de Preview */}
      <Dialog 
        open={dialogAberto} 
        onClose={() => setDialogAberto(false)}
        maxWidth="md"
        fullWidth
      >
        <DialogTitle>
          üìÑ Preview: {arquivoSelecionado?.nome}
        </DialogTitle>
        <DialogContent>
          {arquivoSelecionado && (
            <>
              <Alert severity="info" sx={{ mb: 2 }}>
                <strong>Ferramenta:</strong> {arquivoSelecionado.ferramenta} | 
                <strong> Registros:</strong> {arquivoSelecionado.registros} | 
                <strong> Tamanho:</strong> {arquivoSelecionado.tamanho}
              </Alert>
              
              <Typography variant="h6" gutterBottom>
                üìã Primeiras linhas do arquivo:
              </Typography>
              
              <TableContainer component={Paper}>
                <Table size="small">
                  <TableHead>
                    <TableRow>
                      {arquivoSelecionado.colunas.map((coluna, index) => (
                        <TableCell key={index}>
                          <strong>{coluna}</strong>
                        </TableCell>
                      ))}
                    </TableRow>
                  </TableHead>
                  <TableBody>
                    {arquivoSelecionado.preview.map((linha, index) => (
                      <TableRow key={index}>
                        {linha.map((valor, colIndex) => (
                          <TableCell key={colIndex}>{valor}</TableCell>
                        ))}
                      </TableRow>
                    ))}
                  </TableBody>
                </Table>
              </TableContainer>
              
              <Typography variant="body2" color="text.secondary" sx={{ mt: 2 }}>
                ... e mais {arquivoSelecionado.registros - 4} registros
              </Typography>
            </>
          )}
        </DialogContent>
        <DialogActions>
          <Button onClick={() => setDialogAberto(false)}>
            Fechar
          </Button>
          {arquivoSelecionado && (
            <Button 
              variant="contained" 
              startIcon={<Download />}
              onClick={() => {
                baixarArquivo(arquivoSelecionado);
                setDialogAberto(false);
              }}
              color={arquivoSelecionado.cor as any}
            >
              Download
            </Button>
          )}
        </DialogActions>
      </Dialog>
    </Box>
  );
};

export default GerenciadorExemplos;